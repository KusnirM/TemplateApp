/**
 * Common Configuration for all Data Modules
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.devtools.ksp'
apply from: "${rootProject.projectDir}/config/buildsystem/versioning.gradle"

android {
    compileSdk libs.versions.compileSdk.get() as int

    defaultConfig {
        minSdk libs.versions.minSdk.get() as int
        targetSdk libs.versions.targetSdk.get() as int

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildTypes {

        release {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        alpha {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
        }
    }
}

dependencies {
    implementation project(':common_domain')

    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.datastore.preferences)

    implementation(libs.kotlinx.coroutines.core)
    implementation(libs.kotlinx.serialization.json)

    implementation(libs.ktor.client.android)
    implementation(libs.ktor.client.content.negotiation)
    implementation(libs.ktor.client.core)
    implementation(libs.ktor.client.logging)
    implementation(libs.ktor.client.okhttp)

    implementation(libs.dagger)
//    todo 3. assist injection with hilt
//    implementation(libs.dagger.hilt)
    implementation(libs.javax.inject)
    implementation(libs.timber)

    ksp(libs.dagger.compiler)
//    ksp(libs.dagger.hilt.compiler)
    testImplementation(libs.junit.jupiter.api)
    testRuntimeOnly(libs.junit.jupiter.engine)
    testImplementation(libs.kotlinx.coroutines.test)
}
